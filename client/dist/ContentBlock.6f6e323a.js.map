{"version":3,"sources":["../../node_modules/react-reveal/Slide.js","components/ContentBlock/LeftContentBlock/styles.js","components/ContentBlock/LeftContentBlock/index.js","components/ContentBlock/RightContentBlock/styles.js","components/ContentBlock/RightContentBlock/index.js","components/ContentBlock/index.js"],"names":["LeftContentBlock","styled","section","Content","p","ContentWrapper","div","ServiceWrapper","MinTitle","h6","MinPara","ServiceItem","Col","icon","title","content","t","id","map","item","RightBlockContainer","ButtonWrapper","RightBlock","button","color","ContentBlock","props","type"],"mappings":"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","file":"ContentBlock.6f6e323a.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";function _interopRequireDefault(o){return o&&o.__esModule?o:{default:o}}function _objectWithoutProperties(o,e){var r={};for(var t in o)e.indexOf(t)>=0||Object.prototype.hasOwnProperty.call(o,t)&&(r[t]=o[t]);return r}function make(o,e){var r=e.left,t=e.right,p=e.up,l=e.down,u=e.top,a=e.bottom,i=e.big,n=e.mirror,s=e.opposite,d=(r?1:0)|(t?2:0)|(u||l?4:0)|(a||p?8:0)|(n?16:0)|(s?32:0)|(o?64:0)|(i?128:0);if(lookup.hasOwnProperty(d))return lookup[d];var _=r||t||p||l||u||a,f=void 0,b=void 0;if(_){if(!n!=!(o&&s)){var y=[t,r,a,u,l,p];r=y[0],t=y[1],u=y[2],a=y[3],p=y[4],l=y[5]}var m=i?\"2000px\":\"100%\";f=r?\"-\"+m:t?m:\"0\",b=l||u?\"-\"+m:p||a?m:\"0\"}return lookup[d]=(0,_globals.animation)((o?\"to\":\"from\")+\" {\"+(_?\" transform: translate3d(\"+f+\", \"+b+\", 0);\":\"\")+\"}\\n     \"+(o?\"from\":\"to\")+\" {transform: none;} \"),lookup[d]}function Slide(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_globals.defaults,e=o.children,r=(o.out,o.forever),t=o.timeout,p=o.duration,l=void 0===p?_globals.defaults.duration:p,u=o.delay,a=void 0===u?_globals.defaults.delay:u,i=o.count,n=void 0===i?_globals.defaults.count:i,s=_objectWithoutProperties(o,[\"children\",\"out\",\"forever\",\"timeout\",\"duration\",\"delay\",\"count\"]),d={make:make,duration:void 0===t?l:t,delay:a,forever:r,count:n,style:{animationFillMode:\"both\"},reverse:s.left};return(0,_wrap2.default)(s,d,d,e)}Object.defineProperty(exports,\"__esModule\",{value:!0});var _propTypes=require(\"prop-types\"),_wrap=require(\"./wrap\"),_wrap2=_interopRequireDefault(_wrap),_globals=require(\"./globals\"),propTypes={out:_propTypes.bool,left:_propTypes.bool,right:_propTypes.bool,top:_propTypes.bool,bottom:_propTypes.bool,big:_propTypes.bool,mirror:_propTypes.bool,opposite:_propTypes.bool,duration:_propTypes.number,timeout:_propTypes.number,delay:_propTypes.number,count:_propTypes.number,forever:_propTypes.bool},lookup={};Slide.propTypes=propTypes,exports.default=Slide,module.exports=exports.default;","import styled from 'styled-components';\r\nimport { Col } from 'antd';\r\n\r\nexport const LeftContentBlock = styled.section`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled.h6`\r\n  font-size: 1rem;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n`;\r\n\r\nexport const MinPara = styled.p`\r\n  font-size: 0.75rem;\r\n`;\r\n\r\nexport const ServiceItem = styled(Col)`\r\n  margin: 2rem 0;\r\n  position: relative;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nimport SvgIcon from \"../../../common/SvgIcon\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst LeftContentBlock = ({ icon, title, content, section, t, id }) => {\r\n  return (\r\n    <S.LeftContentBlock>\r\n      <Row type=\"flex\" justify=\"space-between\" align=\"middle\" id={id}>\r\n        <Col lg={11} md={11} sm={12} xs={24}>\r\n          <Slide left>\r\n            <SvgIcon\r\n              src={\"Minimal_Logo\"}\r\n              className=\"about-block-image\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <Slide right>\r\n            <S.ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <S.Content>{t(content)}</S.Content>\r\n              <S.ServiceWrapper>\r\n                <Row type=\"flex\" justify=\"space-between\">\r\n                  {section &&\r\n                    typeof section === \"object\" &&\r\n                    section.map((item, id) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <S.MinTitle>{t(item.title)}</S.MinTitle>\r\n                          <S.MinPara>{t(item.content)}</S.MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </S.ServiceWrapper>\r\n            </S.ContentWrapper>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </S.LeftContentBlock>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from 'styled-components';\r\n\r\nexport const RightBlockContainer = styled.section`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 400px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\nimport React from 'react';\r\n\r\nimport SvgIcon from \"../../../common/SvgIcon\";\r\nimport Button from \"../../../common/Button\";\r\n\r\nimport * as S from \"./styles\";\r\nconst RightBlock = ({ title, content, button, icon, t, id,  }) => {\r\n  // const scrollTo = (id) => {\r\n  //   const element = document.getElementById(id);\r\n  //   element.scrollIntoView({\r\n  //     behavior: \"smooth\",\r\n  //   });\r\n  // };\r\n\r\n   const getBooks = () => {\r\n     \r\n  }\r\n\r\n  return (\r\n    <S.RightBlockContainer>\r\n      <Row type=\"flex\" justify=\"space-between\" align=\"middle\" id={id}>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <Slide left>\r\n            <S.ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <S.Content>{t(content)}</S.Content>\r\n              <S.ButtonWrapper>\r\n                {button &&\r\n                  typeof button === \"object\" &&\r\n                  button.map((item, id) => {\r\n                    return (\r\n                      \r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        width=\"true\"\r\n                        onClick={() => getBooks()}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </S.ButtonWrapper>\r\n            </S.ContentWrapper>\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={11} md={11} sm={12} xs={24}>\r\n          <Slide right>\r\n            <SvgIcon\r\n              src={\"Minimal_Logo\"}\r\n              className=\"about-block-image\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </S.RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\n\r\nconst ContentBlock = (props) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"]}